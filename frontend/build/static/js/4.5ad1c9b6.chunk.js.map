{"version":3,"sources":["components/UI components/input.js","components/UI components/input.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","util/checkValidity.js","components/checkout/checkout.js"],"names":["input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","console","log","push","Invalid","elementType","type","className","join","placeholder","value","onChange","pattern","Select","changed","options","map","opt","displayValue","message","validationError","Input","Label","label","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError","checkValidity","rules","isValid","required","trim","minLength","maxLength","test","String","toLowerCase","Checkout","useState","validation","valid","name","setName","email","setEmail","phone","setPhone","address","setAddress","isFormValid","setIsfromValid","setCart","subTotal","cart","totalPrice","shipment","Math","round","grandTotal","items","product","price","quantity","title","_id","useEffect","inputChangedHandler","event","identifier","target","loading","asOverlay","id","elemetType","class","disabled","onClick","data","clicked","clickedHandler"],"mappings":"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","file":"static/js/4.5ad1c9b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './input.module.css';\r\n\r\nconst input=(props)=>{\r\n    let inputElement = null;\r\n    let inputClasses = [classes.InputElement]\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched)\r\n    {\r\n        console.log(props)\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n    switch(props.elementType)\r\n    {\r\n        case('text'):\r\n        inputElement=<input  \r\n        type= 'text'\r\n         className={inputClasses.join(' ')} \r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.onChange}/>;\r\n        break;\r\n        case('email'):\r\n        inputElement=<input  \r\n        type= 'email'\r\n        className={inputClasses.join(' ')} \r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.onChange}/>;\r\n        break;\r\n        case('tel'):\r\n        inputElement=<input  \r\n        pattern=\"[0-9]\"\r\n        className={inputClasses.join(' ')} \r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        type='tel'/>;\r\n        break;\r\n        case('password'):\r\n        inputElement=<input  \r\n         className={inputClasses.join(' ')} \r\n         placeholder={props.placeholder}\r\n         type='password'\r\n         value={props.value}\r\n        onChange={props.onChange}/>;\r\n        break;\r\n       \r\n        case('textarea'):\r\n        inputElement=<textarea \r\n        type='textarea'  \r\n        className={inputClasses.join(' ')} \r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.onChange}/>;\r\n        break;\r\n        case('file'):\r\n        inputElement=<input  \r\n        type = 'file'\r\n         className={inputClasses.join(' ')} \r\n         placeholder={props.placeholder}\r\n         value={props.value}\r\n          onChange={props.onChange}/>;\r\n        break;\r\n        case('select'):\r\n        inputElement=(<select\r\n          className={classes.Select} \r\n          onChange={props.changed}\r\n          value={props.value}>\r\n              {props.options.map(opt=>{\r\n                  return (\r\n                  <option key={opt.value}value= {opt.value} onChange={props.changed}>{opt.displayValue}</option>\r\n                  )\r\n              })}\r\n          </select>);\r\n        break;\r\n\r\n        default:\r\n            inputElement= <input  className={inputClasses.join(' ')}  value={props.value}/>;\r\n            break;\r\n\r\n    }\r\n    console.log(props.message)\r\nlet validationError = null;\r\nif (props.invalid && props.touched ) {\r\n    validationError = <p>{props.message}</p>;\r\n  \r\n}\r\n\r\n\r\nreturn (\r\n    <div className={classes.Input}>\r\n    <label \r\n    className={classes.Label}>\r\n        {props.label}\r\n        </label>\r\n\r\n        {inputElement}\r\n      {validationError}\r\n</div>\r\n\r\n) \r\n\r\n}\r\n\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__2ybRx\",\"Label\":\"input_Label__wIjxj\",\"InputElement\":\"input_InputElement__20Uhr\",\"Invalid\":\"input_Invalid__3S7sT\",\"ValidationError\":\"input_ValidationError__2fBkf\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\r\n  export const checkValidity=(value,rules)=>{\r\n        let isValid = true;\r\n\r\n    \r\n        if(rules.required)\r\n        {   \r\n            isValid= value.trim()!=='' && isValid;\r\n        }\r\n        if(rules.minLength)\r\n        {\r\n            console.log(value,rules)\r\n             isValid= value.length >= rules.minLength && isValid;\r\n             \r\n        }\r\n        if(rules.maxLength)\r\n        {\r\n             isValid= value.length <= rules.maxLength && isValid;\r\n        }\r\n        if(rules.type==='email')\r\n        {\r\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = re.test(String(value).toLowerCase());\r\n       \r\n        }\r\n        if(rules.type==='tel')\r\n        {\r\n            const re = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im\r\n            isValid = re.test(String(value).toLowerCase());\r\n       \r\n        }\r\n        \r\n        return isValid;\r\n    }   \r\n","import React,{useState,useEffect} from 'react';\r\nimport './checkout.scss'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport {checkValidity} from '../../util/checkValidity'\r\nimport Input from '../UI components/input'\r\nimport LoadingSpinner from '../UI components/LoadingSpinner';\r\nconst Checkout = (props)=>{\r\n\r\n  const [name, setName] = useState(\r\n    {\r\n\r\n\r\n      value:'',\r\n      validation : {\r\n       required: true,\r\n       minLength: 5,\r\n       maxLength: 20,\r\n       message: '*must be of length between 5 and 20'\r\n              },\r\n     valid: false,\r\n   \r\n     touched: false\r\n})\r\nconst [email, setEmail] = useState(\r\n  {\r\n\r\n\r\n    value:'',\r\n    validation : {\r\n     required: true,\r\n     type: 'email',\r\n     message: '*must be a valid email '\r\n            },\r\n    valid: false,\r\n    touched: false\r\n})\r\n\r\n\r\nconst [phone, setPhone] = useState(\r\n  {\r\n\r\n\r\n    value:'',\r\n    validation : {\r\n      type: 'tel',\r\n     required: true,\r\n     minLength: 11,\r\n     message: '*must be a valid phone number'\r\n  \r\n            },\r\n   valid: false,\r\n \r\n   touched: false\r\n})\r\nconst [address, setAddress] = useState(\r\n  {\r\n\r\n\r\n    value:'',\r\n    validation : {\r\n     required: true,\r\n     minLength: 20,\r\n     maxLength: 100,\r\n     message: '*must be a valid and complete address of length between 20 and 100'\r\n            },\r\n   valid: false,\r\n \r\n   touched: false\r\n})\r\n\r\n\r\n\r\nconst [isFormValid, setIsfromValid] = useState(false)\r\nconst [cart,setCart]= useState({})\r\n\r\n  let subTotal = props.cart.totalPrice;\r\n\r\n  let shipment =Math.round((+subTotal/100)*10,1) ;\r\n    let grandTotal = +subTotal +shipment;\r\n let items =<h3>Cart is Empty</h3>;\r\n    if(props.cart.items.length>0)\r\n    {\r\n      items =  props.cart.items.map(i=>\r\n        {\r\n          let  totalPrice= i.product.price * i.quantity;\r\n\r\n     \r\n        return(\r\n        <div key={i.product._id} className=\"product\">\r\n  \r\n            <div className=\"product-details\">\r\n              <div className=\"product-title\">{i.product.title}</div>\r\n           </div>\r\n            <div className=\"product-price\">{i.product.price}</div>\r\n            <div className=\"product-quantity\">\r\n              <p  type=\"number\"  >{i.quantity}</p>\r\n            </div>\r\n       \r\n            <div className=\"product-line-price\">{totalPrice}</div>\r\n          </div>\r\n            )})\r\n    }\r\n\r\n    useEffect(()=>{\r\n    setCart(props.cart)\r\n   \r\n    },[props.cart])\r\n\r\n    useEffect(()=>{\r\n      \r\n     if(email.valid && phone.valid && address.valid && name.valid && !isFormValid  && props.cart.items.length>0)\r\n     {\r\n      setIsfromValid(true)\r\n     }\r\n     \r\n     console.log('checking form validity..', isFormValid)\r\n    },[email,phone,address,name])\r\n\r\n  const inputChangedHandler = (event,identifier)=>{\r\n      if(identifier==='name')\r\n      {\r\n        let isValid = checkValidity(event.target.value,name.validation)\r\n        setName({...name, value:event.target.value, valid: isValid, touched: true})\r\n        \r\n      \r\n      }\r\n      if(identifier==='email')\r\n      {\r\n        let isValid = checkValidity(event.target.value,email.validation)\r\n        setEmail({...email, value:event.target.value, valid: isValid, touched: true})\r\n        \r\n      }\r\n\r\n      if(identifier==='phone')\r\n      {\r\n        let isValid = checkValidity(event.target.value,phone.validation)\r\n        setPhone({...phone, value:event.target.value, valid: isValid, touched: true})\r\n      \r\n       \r\n      }\r\n      if(identifier==='address')\r\n      {\r\n        let isValid = checkValidity(event.target.value,address.validation)\r\n        setAddress({...address, value:event.target.value, valid: isValid, touched: true })\r\n         \r\n      }\r\n  \r\n      \r\n  }\r\n\r\nconst clickedHandler=()=>{\r\nconst data={\r\n\r\n  \r\n    email: email.value,\r\n    name: name.value,\r\n    address: address.value,\r\n    phone: phone.value\r\n}\r\n\r\n\r\nprops.clicked(data)\r\n\r\n}\r\n\r\n\r\nif(props.loading)\r\n{\r\n  return (<LoadingSpinner asOverlay/> )\r\n}\r\n\r\n  return(\r\n    <Auxiliary>\r\n      \r\n    <div id=\"container\">  \r\n \r\n \r\n <div  id=\"contact\">\r\n   <h3>Customer's details</h3>\r\n    <h4>Fill this form to place your order</h4>\r\n    \r\n  <Input placeholder=\"Your name\" \r\n    elementType=\"text\" \r\n    onChange={(event)=>inputChangedHandler(event,'name')}\r\n    message={name.validation.message}\r\n    invalid={!name.valid}\r\n    touched={name.touched}\r\n    shouldValidate={name.validation.required}\r\n   />\r\n\r\n \r\n  <Input \r\n  placeholder=\"Your Email Address  (optional)\" \r\n  message={email.validation.message}\r\n  elementType=\"email\" \r\n  onChange={(event)=>inputChangedHandler(event,'email')} \r\n  invalid={!email.valid}\r\n  touched={email.touched}\r\n  shouldValidate={email.validation.required}\r\n   elemetType=\"email\" \r\n  />\r\n\r\n  <Input\r\n   placeholder=\"Your Phone Number \"\r\n   message={phone.validation.message}\r\n   onChange={(event)=>inputChangedHandler(event,'phone')}\r\n     elementType=\"tel\"\r\n     invalid={!phone.valid}\r\n     touched={phone.touched}\r\n     shouldValidate={phone.validation.required}\r\n    />\r\n\r\n  <Input\r\nid=\"address\"\r\nmessage={address.validation.message}\r\nonChange={(event)=>inputChangedHandler(event,'address')} \r\nvalue={address.value}\r\nelementType=\"textarea\"\r\ninvalid={!address.valid}\r\ntouched={address.touched}\r\nshouldValidate={address.validation.required}\r\nplaceholder=\"Your Complete Address\"\r\n/>\r\n\r\n\r\n  </div>\r\n</div>\r\n<hr className='line'></hr>\r\n<div class='order-summary'>\r\n           <h2>Your order</h2>\r\n\r\n        <div className=\"column-labels\">\r\n    \r\n        <label className=\"product-details\">Product</label>\r\n        <label className=\"product-price\">Price</label>\r\n        <label className=\"product-quantity\">Quantity</label>\r\n         <label className=\"product-line-price\">Total</label>\r\n      </div>\r\n           {items}\r\n\r\n           <div className=\"totals\">\r\n     <div className=\"totals-item\">\r\n      <label>Subtotal</label>\r\n      <div className=\"totals-value\" id=\"cart-subtotal\">{subTotal? subTotal : 0}</div>\r\n    </div>\r\n   \r\n    <div className=\"totals-item\">\r\n      <label>Shipping</label>\r\n      <div className=\"totals-value\" id=\"cart-shipping\">{shipment}</div>\r\n    </div>\r\n    <div className=\"totals-item totals-item-total\">\r\n      <label>Grand Total</label>\r\n      <div className=\"totals-value\" id=\"cart-total\">{grandTotal }</div>\r\n    </div>\r\n  </div>\r\n      \r\n  <button className='button' type='submit' disabled={!isFormValid} onClick={()=>clickedHandler()}  id=\"contact-submit\" >Order</button>\r\n\r\n\r\n      </div>\r\n    \r\n         \r\n    </Auxiliary>\r\n   \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Checkout;"],"sourceRoot":""}