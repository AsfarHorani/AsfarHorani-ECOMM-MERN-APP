{"version":3,"sources":["components/Article/Product-View/product-view.js"],"names":["ProductView","state","product","loading","console","log","this","props","match","prodId","params","setState","fetch","process","method","then","res","status","Error","json","resData","catch","err","asOverlay","className","title","src","imageUrl","alt","price","description","onClick","addToCart","_id","Component"],"mappings":"kMAIMA,E,4MAENC,MAAM,CACFC,QAAQ,GACRC,SAAS,G,uDAIb,WAAqB,IAAD,OAChBC,QAAQC,IAAIC,KAAKC,MAAMC,OACvB,IAAMC,EAASH,KAAKC,MAAMC,MAAME,OAAOD,OACvCH,KAAKK,SAAS,CAACR,SAAQ,IAGzBS,MAAMC,oDAAkDJ,EAClD,CAAEK,OAAQ,QAELC,MAAK,SAAAC,GACN,GAAgB,MAAbA,EAAIC,QAA6B,MAAbD,EAAIC,OACzB,MAAM,IAAIC,MAAM,4BAGlB,OADAd,QAAQC,IAAIW,GACLA,EAAIG,UACVJ,MAAK,SAAAK,GACNhB,QAAQC,IAAIe,GACZ,EAAKT,SAAS,CACVT,QAASkB,EAAQlB,QACjBC,SAAS,IAGbC,QAAQC,IAAI,EAAKJ,UAChBoB,OAAM,SAAAC,GACP,EAAKX,SAAS,CAEZR,SAAS,IAGXC,QAAQC,IAAIiB,Q,oBAQpB,WAAS,IAAD,OACJlB,QAAQC,IAAIC,KAAKL,MAAMC,SACxB,IAAIA,EAAUI,KAAKL,MAAMC,QACzB,OAAIA,EAMFI,KAAKL,MAAME,QACJ,cAAC,IAAD,CAAgBoB,WAAS,IAIvC,uBAAMC,UAAU,WAAhB,UACI,6BAAKtB,EAAQuB,QACb,8BACI,qBAAKD,UAAU,QAAQE,IAAKb,wCAAA,UAAqCX,EAAQyB,UAAYC,IAAK1B,EAAQuB,UAEtG,2CAAYvB,EAAQ2B,SACpB,4BAAI3B,EAAQ4B,cACZ,wBAAQN,UAAU,MAAMO,QAAS,kBAAI,EAAKxB,MAAMyB,UAAU9B,EAAQ+B,MAAlE,4BAhBY,8E,GAlDQC,aA2EXlC","file":"static/js/8.37a8d89c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './productView.css'\r\nimport LoadingSpinner from '../../UI components/LoadingSpinner';\r\n\r\nclass ProductView extends Component{\r\n\r\nstate={\r\n    product:[],\r\n    loading: false\r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n    console.log(this.props.match)\r\n    const prodId = this.props.match.params.prodId;\r\n    this.setState({loading:true})\r\n\r\n \r\n  fetch(process.env.REACT_APP_BACKEND_URL+'get-product/'+ prodId,\r\n        { method: \"GET\", \r\n          \r\n          }).then(res=>{\r\n            if(res.status!==200 && res.status!==201){\r\n              throw new Error(' could not fetch product')\r\n            }\r\n            console.log(res)\r\n            return res.json()\r\n          }).then(resData=>{\r\n            console.log(resData)\r\n            this.setState({\r\n                product: resData.product,\r\n                loading: false\r\n                \r\n            })\r\n            console.log(this.state)\r\n          }).catch(err=>{\r\n            this.setState({\r\n              \r\n              loading: false\r\n              \r\n          })\r\n            console.log(err)\r\n          })\r\n      \r\n      \r\n}\r\n\r\n     \r\n   \r\n    render(){\r\n        console.log(this.state.product)\r\n       let product = this.state.product;\r\n       if(!product)\r\n       {\r\n           return <h3>Something went wrong try to reload page!</h3>\r\n       }\r\n\r\n      \r\n      if(this.state.loading){\r\n        return (<LoadingSpinner asOverlay/>)\r\n      }   \r\n      \r\nreturn (\r\n  <main className='centered'>\r\n      <h1>{product.title}</h1>\r\n      <div >\r\n          <img className=\"image\" src={process.env.REACT_APP_BACKEND_URL+`${product.imageUrl}`} alt={product.title} />\r\n      </div>\r\n      <h2>{`Rs: ${product.price}`}</h2>\r\n      <p>{product.description}</p>\r\n      <button className=\"Btn\" onClick={()=>this.props.addToCart(product._id)}>Add to cart</button>\r\n      </main>\r\n       )\r\n\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default ProductView;"],"sourceRoot":""}