{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projects\\\\e-commerce\\\\front-end\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Body from './container/Body/body';\nimport Signup from './components/Auth/signup/signup';\nimport Login from './components/Auth/login/login';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAuth: false,\n      token: null,\n      adminId\n    };\n\n    this.componentDidMount = () => {\n      const token = localStorage.getItem('token');\n      const expiryDate = localStorage.getItem('expiryDate');\n\n      if (!token || !expiryDate) {\n        return;\n      }\n\n      if (new Date(expiryDate) <= new Date()) {\n        //this.logoutHandler();\n        return;\n      }\n\n      const adminId = localStorage.getItem('adminId');\n      const remainingMilliseconds = new Date(expiryDate).getTime() - new Date().getTime();\n      this.setState({\n        isAuth: true,\n        token: token,\n        adminId: admin\n      });\n      this.setAutoLogout(remainingMilliseconds);\n    };\n\n    this.signupHandler = adminData => {\n      console.log(adminData);\n      fetch('http://localhost:8080/signup/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: adminData.email,\n          password: adminData.password,\n          name: adminData.name\n        })\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('create admin failed');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.props.history.replace('/home');\n    };\n\n    this.loginHandler = loginData => {\n      console.log(loginData);\n      fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: loginData.email,\n          password: loginData.password\n        })\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Login failed');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        this.setState({\n          isAuth: true,\n          token: resData.token\n        });\n        localStorage.setItem('token', resData.token);\n        localStorage.setItem('adminId', resData.adminId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(new Date().getTime() + remainingMilliseconds);\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      });\n      this.props.history.push(\"/\");\n    };\n\n    this.setAutoLogout = milliseconds => {\n      setTimeout(() => {\n        this.logoutHandler();\n      }, milliseconds);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Body, {\n            isAuth: this.state.isAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          render: () => /*#__PURE__*/_jsxDEV(Signup, {\n            clicked: this.signupHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n            clicked: this.loginHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Work/Projects/e-commerce/front-end/src/App.js"],"names":["React","Component","Body","Signup","Login","Route","Switch","Redirect","withRouter","App","state","isAuth","token","adminId","componentDidMount","localStorage","getItem","expiryDate","Date","remainingMilliseconds","getTime","setState","admin","setAutoLogout","signupHandler","adminData","console","log","fetch","method","headers","body","JSON","stringify","email","password","name","then","res","status","Error","json","resData","catch","err","props","history","replace","loginHandler","loginData","setItem","toISOString","push","milliseconds","setTimeout","logoutHandler","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './App.css';\nimport Body from './container/Body/body';\nimport Signup from './components/Auth/signup/signup'\nimport Login from './components/Auth/login/login'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nclass App extends Component {\n\nstate={\n    isAuth: false,\n    token: null,\n    adminId\n  \n}\n\ncomponentDidMount=()=>{\n  const token = localStorage.getItem('token');\n  const expiryDate = localStorage.getItem('expiryDate');\n  if(!token || !expiryDate)\n  {\n    return\n  }\n  if (new Date(expiryDate) <= new Date()) {\n    //this.logoutHandler();\n    return;\n  }\n\n  const adminId = localStorage.getItem('adminId');\n  const remainingMilliseconds = new Date(expiryDate).getTime() - new Date().getTime();\n  this.setState({ isAuth: true, token: token, adminId: admin });\nthis.setAutoLogout(remainingMilliseconds);\n}\n\n\n\nsignupHandler=(adminData)=>{\n  console.log(adminData)\n  fetch('http://localhost:8080/signup/',{\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n\n      email: adminData.email,\n      password: adminData.password,\n      name: adminData.name\n\n    })\n  }).then(res=>{\n    if(res.status!==200 && res.status!==201)\n    {\n      throw new Error('create admin failed')\n    \n    }\n    return res.json();\n}).then(resData=>{\n  console.log(resData)\n  \n}).catch(err=>{\n  console.log(err)\n})\nthis.props.history.replace('/home')\n}\n\nloginHandler=(loginData)=>{\n\n  console.log(loginData)\n  fetch('http://localhost:8080/login',{\n    method: 'POST',\n    headers:{\n      'Content-Type' : 'application/json'\n    },\n    body: JSON.stringify({\n      email: loginData.email,\n      password: loginData.password\n    })\n  }).then(res=>{\n    if(res.status!==200 && res.status !==201){\n      throw new Error('Login failed')\n    }\n    return res.json()\n  }).then(resData=>{\n   console.log(resData)\n    this.setState({\n      isAuth: true,\n      token: resData.token\n\n    })\n    localStorage.setItem('token', resData.token);\n    localStorage.setItem('adminId', resData.adminId)\n    const remainingMilliseconds = 60 * 60 * 1000;\n    const expiryDate = new Date(\n      new Date().getTime() + remainingMilliseconds\n    );\n    localStorage.setItem('expiryDate', expiryDate.toISOString());\n    this.setAutoLogout(remainingMilliseconds);\n\n  })\n \n  this.props.history.push(\"/\")\n\n}\nsetAutoLogout = milliseconds => {\n  setTimeout(() => {\n    this.logoutHandler();\n  }, milliseconds);\n};\n\n\n  render(){\n\n\n  return (\n    <div className=\"App\">\n        \n        <Switch>\n          <Route path='/'  render={()=> <Body   isAuth={this.state.isAuth} />}/>\n          <Route path=\"/signup\" render={() =><Signup  clicked={this.signupHandler}/>}/>\n          <Route path=\"/login\" render={(props) =><Login {...props}  clicked={this.loginHandler}/>}/>\n         \n     </Switch>\n    \n        \n    </div>\n  );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}