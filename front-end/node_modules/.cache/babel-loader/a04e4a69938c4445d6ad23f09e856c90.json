{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/get-orders', {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        const error = new Error('Could not fetch Orders');\n        throw error;\n      }\n\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n    });\n  }\n\n  render() {\n    return {};\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["D:/Work/Projects/e-commerce/front-end/src/components/orders/orders.js"],"names":["React","Component","Order","state","componentDidMount","fetch","method","headers","Authorization","props","token","then","res","status","error","Error","json","resData","console","log","render"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACtB,EADsB;AAAA;;AAG5BC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,kCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAC,KAD8B;AAErCC,MAAAA,OAAO,EAAC;AAEFC,QAAAA,aAAa,EAAE,YAAY,KAAKC,KAAL,CAAWC;AAFpC;AAF6B,KAApC,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAE;AACT,UAAGA,GAAG,CAACC,MAAJ,KAAa,GAAb,IAAoBD,GAAG,CAACC,MAAJ,KAAa,GAApC,EAAwC;AACpC,cAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,wBAAV,CAAd;AACA,cAAMD,KAAN;AACH;;AACD,aAAOF,GAAG,CAACI,IAAJ,EAAP;AACH,KAZD,EAYGL,IAZH,CAYQM,OAAO,IAAE;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,KAdD;AAeH;;AAECG,EAAAA,MAAM,GAAE;AAEJ,WAAM,EAAN;AACH;;AAxByB;;AA4B9B,eAAelB,KAAf","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass Order extends Component {\r\n  state={}\r\n\r\n  componentDidMount(){\r\n      fetch('http://localhost:8080/get-orders',{\r\n          method:'GET',\r\n          headers:{\r\n            \r\n                Authorization: 'Bearer ' + this.props.token,\r\n            }\r\n      }).then(res=>{\r\n          if(res.status!==200 && res.status!==201){\r\n              const error = new Error('Could not fetch Orders');\r\n              throw error\r\n          }\r\n          return res.json()\r\n      }).then(resData=>{\r\n          console.log(resData)\r\n      })\r\n  }\r\n\r\n    render(){\r\n\r\n        return{}\r\n    }\r\n\r\n}\r\n\r\nexport default Order"]},"metadata":{},"sourceType":"module"}