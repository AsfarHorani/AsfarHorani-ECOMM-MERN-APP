{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projects\\\\e-commerce\\\\front-end\\\\src\\\\container\\\\Body\\\\body.js\";\nimport Header from '../../components/Header/Header';\nimport React, { Component } from 'react';\nimport Shop from '../../components/shop/shop';\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport SideBar from '../../components/SideBar/sideBar';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport AddProductForm from '../../components/Add-Product From/addProductForm';\nimport ProductView from '../../components/Article/Product-View/product-view';\nimport Cart from '../../components/cart/cart';\nimport Checkout from '../../components/checkout/checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Body extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedProduct: null,\n      loggedInAdmin: null,\n      products: null,\n      cart: {\n        items: [],\n        totalPrice: null\n      },\n      token: null\n    };\n\n    this.addProductHandler = prodData => {\n      fetch('http://localhost:8080/add-product/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: prodData.title,\n          price: prodData.price,\n          description: prodData.description,\n          imageUrl: ''\n        })\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('create product failed');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        const product = {\n          title: resData.title,\n          price: resData.price,\n          description: resData.description,\n          imageUrl: resData.imageUrl\n        };\n        this.setState(prevState => {\n          let updatedProducts = [...prevState.products];\n          updatedProducts = prevState.products.concat(product);\n          return {\n            products: updatedProducts\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.deleteHandler = prodId => {\n      console.log(prodId);\n      fetch('http://localhost:8080/delete-product/' + prodId, {\n        method: \"DELETE\"\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Delete product failed');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        const deletedProduct = resData.product;\n        const updatedProducts = this.state.products.filter(prod => prod._id !== deletedProduct._id);\n        this.setState({\n          products: updatedProducts\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.editHandler = prodId => {\n      console.log(prodId);\n      const prod = this.state.products.find(p => p._id === prodId);\n      console.log(prod);\n      this.setState({\n        selectedProduct: prod\n      });\n      console.log(this.state.selectedProduct);\n    };\n\n    this.addToCartHandler = prodId => {\n      const product = { ...this.state.products.find(p => prodId === p._id)\n      };\n      const prodPrice = product.price;\n      console.log(this.state);\n      const newItem = [{\n        product: product,\n        quantity: 1\n      }];\n      this.setState(prevState => {\n        let updatedCart = { ...prevState.cart\n        };\n        let updatedCartItems = [...updatedCart.items];\n        let updatedPrice = [updatedCart.totalPrice];\n        updatedPrice = +updatedPrice + +prodPrice;\n        updatedCartItems = prevState.cart.items.concat(newItem);\n        console.log(updatedPrice);\n        return {\n          cart: { ...this.state.cart,\n            items: updatedCartItems,\n            totalPrice: updatedPrice\n          }\n        }; // this.setState({ someProperty: { ...this.state.someProperty, flag: false} });\n      });\n    };\n\n    this.removeFromCartHandler = (prodId, prodPrice) => {\n      this.setState(prevState => {\n        let updatedCart = { ...prevState.cart\n        };\n        let updatedCartItems = [...updatedCart.items];\n        let updatedPrice = [updatedCart.totalPrice];\n        updatedPrice = +updatedPrice - +prodPrice;\n        updatedCartItems = updatedCart.items.filter(p => prodId !== p.product._id);\n        console.log(updatedCartItems);\n        return {\n          cart: { ...this.state.cart,\n            items: updatedCartItems,\n            totalPrice: updatedPrice\n          }\n        };\n      });\n    };\n\n    this.addOrderHandler = data => {\n      console.log(data, this.state.cart);\n      fetch('http://localhost:8080/add-order/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.name,\n          phone: data.phone,\n          email: data.email,\n          address: data.address,\n          order: this.state.cart\n        })\n      }).then(res => {\n        if (res.status == 200 && res.status == 201) {\n          throw new Error('Coul\\'d not place your order');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        this.setState(prevState => {\n          let updatedCart = { ...prevState.cart\n          };\n          let updatedCartItems = [...updatedCart.items];\n          let updatedPrice = [updatedCart.totalPrice];\n          updatedCartItems = [];\n          updatedPrice = null;\n          return {\n            cart: { ...this.state.cart,\n              items: updatedCartItems,\n              totalPrice: updatedPrice\n            }\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.quantityHandler = (quan, prodId) => {\n      console.log(quan, prodId);\n      this.setState(prevState => {\n        let updatedCart = { ...prevState.cart\n        };\n        let updatedCartItems = [...updatedCart.items];\n        let updatedPrice = [updatedCart.totalPrice];\n        let updatedCartItemIndex = updatedCart.items.findIndex(p => prodId === p.product._id);\n        updatedCartItems[updatedCartItemIndex].quantity = quan;\n        updatedPrice = +updatedPrice + quan * +updatedCartItems[updatedCartItemIndex].product.price;\n        return {\n          cart: { ...this.state.cart,\n            items: updatedCartItems,\n            totalPrice: updatedPrice\n          }\n        };\n      });\n    };\n\n    this.clickedEditHandler = prodData => {\n      console.log(prodData);\n      fetch('http://localhost:8080/edit-product/' + this.state.selectedProduct._id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: prodData.title,\n          price: prodData.price,\n          description: prodData.description,\n          imageUrl: ''\n        })\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Could not edit product');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        this.setState({\n          selectedProduct: null\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/get-products').then(res => {\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n      this.setState({\n        products: resData.products\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Auxiliary, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isAuth: props.isAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Shop, { ...props,\n            addToCart: this.addToCartHandler,\n            editHandler: this.editHandler,\n            delete: this.deleteHandler,\n            isAuth: this.state.isAuth,\n            products: this.state.products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-product\",\n          render: props => /*#__PURE__*/_jsxDEV(AddProductForm, {\n            editMode: false,\n            ...props,\n            isAuth: this.state.isAuth,\n            clicked: this.addProductHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/product/:prodId\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ProductView, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit-product\",\n          render: props => /*#__PURE__*/_jsxDEV(AddProductForm, {\n            clickedEdit: this.clickedEditHandler,\n            product: this.state.selectedProduct,\n            editMode: true,\n            ...props,\n            isAuth: this.state.isAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Cart\",\n          render: props => /*#__PURE__*/_jsxDEV(Cart, {\n            remove: this.removeFromCartHandler,\n            quantityHandler: this.quantityHandler,\n            cart: this.state.cart,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Checkout\",\n          render: props => /*#__PURE__*/_jsxDEV(Checkout, { ...props,\n            cart: this.state.cart,\n            clicked: this.addOrderHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Body);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Work/Projects/e-commerce/front-end/src/container/Body/body.js"],"names":["Header","React","Component","Shop","Auxiliary","SideBar","Route","Switch","Redirect","withRouter","AddProductForm","ProductView","Cart","Checkout","Body","state","selectedProduct","loggedInAdmin","products","cart","items","totalPrice","token","addProductHandler","prodData","fetch","method","headers","body","JSON","stringify","title","price","description","imageUrl","then","res","status","Error","json","resData","console","log","product","setState","prevState","updatedProducts","concat","catch","err","deleteHandler","prodId","deletedProduct","filter","prod","_id","editHandler","find","p","addToCartHandler","prodPrice","newItem","quantity","updatedCart","updatedCartItems","updatedPrice","removeFromCartHandler","addOrderHandler","data","name","phone","email","address","order","quantityHandler","quan","updatedCartItemIndex","findIndex","clickedEditHandler","componentDidMount","render","props","isAuth"],"mappings":"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","sourcesContent":["import Header from '../../components/Header/Header';\r\nimport React, {Component} from 'react';\r\nimport Shop from '../../components/shop/shop';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport SideBar from '../../components/SideBar/sideBar';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport AddProductForm from '../../components/Add-Product From/addProductForm'\r\n\r\nimport ProductView from '../../components/Article/Product-View/product-view';\r\nimport Cart from '../../components/cart/cart';\r\nimport Checkout from '../../components/checkout/checkout';\r\n\r\nclass Body extends Component {\r\n\r\n  state={  \r\n    selectedProduct: null,\r\n    loggedInAdmin : null,\r\n    \r\n    products: null,\r\n    cart: {\r\n      items:[],\r\n     totalPrice: null\r\n    },\r\n    token : null\r\n\r\n}\r\ncomponentDidMount(){\r\n  \r\nfetch('http://localhost:8080/get-products')\r\n  .then(res=>{\r\n      \r\n      return res.json();\r\n   \r\n  }).then(resData=>{\r\n      console.log(resData)\r\n      this.setState({\r\n          products: resData.products\r\n      })\r\n  })\r\n  .catch(err=>{\r\n      console.log(err)\r\n  })\r\n}\r\n\r\n\r\n\r\naddProductHandler=(prodData)=>{\r\n\r\nfetch('http://localhost:8080/add-product/',{\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json',\r\n          },\r\n       body: JSON.stringify({\r\n        title: prodData.title,\r\n        price: prodData.price,\r\n        description: prodData.description,\r\n       imageUrl : '',\r\n       })\r\n  }).then(res=>{\r\n    if(res.status!==200 && res.status!==201)\r\n    {\r\n      throw new Error('create product failed')\r\n    \r\n    }\r\n    return res.json();\r\n  }).then(resData=>{\r\n    console.log(resData);\r\n    const product={\r\n      title: resData.title,\r\n      price: resData.price,\r\n      description: resData.description,\r\n      imageUrl: resData.imageUrl,\r\n    }\r\n     this.setState(prevState=>{\r\n      let updatedProducts= [...prevState.products];\r\n      updatedProducts = prevState.products.concat(product);\r\n      return {products: updatedProducts}\r\n\r\n    }\r\n\r\n    \r\n    )\r\n    \r\n  })\r\n  .catch(err=>{\r\n    console.log(err)\r\n  })\r\n  \r\n\r\n}\r\n\r\ndeleteHandler=(prodId)=>{\r\n  \r\n  console.log(prodId)\r\n  fetch('http://localhost:8080/delete-product/' + prodId,\r\n  {\r\n    method: \"DELETE\"\r\n  }\r\n  ).then(res=>{\r\n    if(res.status!==200 && res.status!==201){\r\n      throw new Error ('Delete product failed')\r\n    }\r\n    return res.json()\r\n\r\n  }).then(resData=>{\r\n    console.log(resData)\r\n    const deletedProduct = resData.product;\r\n    const updatedProducts= this.state.products.filter(prod=>prod._id!==deletedProduct._id);\r\n    this.setState({products: updatedProducts})\r\n\r\n  }).catch(err=>{\r\n       console.log(err)\r\n  })\r\n}\r\n\r\neditHandler=(prodId)=>{\r\n  console.log(prodId)\r\n const prod = this.state.products.find(p=>p._id===prodId)\r\n  console.log(prod)\r\n  this.setState({\r\n    selectedProduct: prod\r\n  })\r\n console.log(this.state.selectedProduct)\r\n}\r\n\r\naddToCartHandler=(prodId)=>{\r\n  \r\n    const product = {...this.state.products.find(p=>prodId===p._id)}\r\n    const prodPrice = product.price;\r\n    console.log(this.state)\r\n    const newItem = [{\r\n      product: product,\r\n      quantity: 1\r\n    }\r\n     ]\r\n this.setState(prevState=>{\r\n       let updatedCart = {...prevState.cart}\r\n     let updatedCartItems= [...updatedCart.items];\r\n    let updatedPrice = [updatedCart.totalPrice]\r\n    updatedPrice = +updatedPrice +  +prodPrice;\r\n     updatedCartItems =prevState.cart.items.concat(newItem)\r\n     console.log(updatedPrice)\r\n      return{ cart: {...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}}\r\n     // this.setState({ someProperty: { ...this.state.someProperty, flag: false} });\r\n    })\r\n    }\r\n\r\nremoveFromCartHandler=(prodId, prodPrice)=>{\r\n \r\n  this.setState(prevState=>{\r\n\r\n    let updatedCart = {...prevState.cart}\r\n    let updatedCartItems= [...updatedCart.items];\r\n    let updatedPrice = [updatedCart.totalPrice]\r\n    updatedPrice = +updatedPrice -  +prodPrice;\r\n   updatedCartItems= updatedCart.items.filter(p=>prodId!==p.product._id)\r\n    console.log( updatedCartItems)\r\n    return{\r\n      cart:{...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}\r\n      \r\n    }\r\n \r\n  })\r\n  }\r\n\r\n  addOrderHandler=(data)=>{\r\n    console.log(data,this.state.cart)\r\n    fetch('http://localhost:8080/add-order/',{\r\n      method: 'POST',\r\n      headers: {\r\n       'Content-Type': 'application/json',\r\n         },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        phone: data.phone,\r\n        email: data.email,\r\n        address: data.address,\r\n        order: this.state.cart\r\n      })\r\n     }).then(res=>{\r\n      if( res.status==200 && res.status==201){\r\n        throw new Error('Coul\\'d not place your order')\r\n      }\r\n\r\n      return res.json()\r\n\r\n     }).then(resData=>{\r\n       console.log(resData)\r\n       this.setState(prevState=>{\r\n        let updatedCart = {...prevState.cart}\r\n        let updatedCartItems= [...updatedCart.items];\r\n       let updatedPrice = [updatedCart.totalPrice]\r\n       updatedCartItems = [];\r\n       updatedPrice = null;\r\n       return{ cart: {...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}}\r\n       })\r\n     }).catch(err=>{\r\n       console.log(err)\r\n     })\r\n}\r\n\r\n  quantityHandler=(quan, prodId)=>{\r\n      console.log(quan,prodId)\r\n      this.setState(prevState=>{\r\n      let updatedCart = {...prevState.cart}\r\n      let updatedCartItems= [...updatedCart.items];\r\n      let updatedPrice = [updatedCart.totalPrice]\r\n      let updatedCartItemIndex =  updatedCart.items.findIndex(p=>prodId===p.product._id)\r\n\r\n      updatedCartItems[updatedCartItemIndex].quantity = quan;\r\n      updatedPrice = +updatedPrice + quan* +updatedCartItems[updatedCartItemIndex].product.price;\r\n      \r\n     return{ cart:{...this.state.cart, items: updatedCartItems, totalPrice : updatedPrice}}\r\n    })\r\n  }\r\n\r\n  clickedEditHandler=(prodData)=>{\r\n    console.log(prodData)\r\n    fetch('http://localhost:8080/edit-product/' + this.state.selectedProduct._id,{\r\n      method: 'PUT',\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        title: prodData.title,\r\n        price: prodData.price,\r\n        description: prodData.description,\r\n        imageUrl : '',\r\n       })\r\n    }).then(res=>{\r\n      if(res.status!==200 && res.status!==201){\r\n        throw new Error('Could not edit product')\r\n      }\r\n      return res.json()\r\n    }).then(resData=>{\r\n      console.log(resData)\r\n      this.setState({selectedProduct: null})\r\n    })\r\n  }\r\n\r\n  render() \r\n  {\r\n\r\n    return(\r\n      <Auxiliary>\r\n        <Header isAuth={props.isAuth}/>\r\n        <SideBar />\r\n        <Switch>\r\n           <Route path='/' exact render={(props) => <Shop {...props}  addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.state.isAuth} products={this.state.products}/>}/>\r\n           <Route path=\"/add-product\" render={(props) =><AddProductForm editMode={false} {...props}  isAuth={this.state.isAuth} clicked={this.addProductHandler} />}/>\r\n          <Route path=\"/product/:prodId\" exact render={(props)=><ProductView {...props} />   }></Route>\r\n          <Route path='/edit-product'  render={(props)=><AddProductForm clickedEdit ={this.clickedEditHandler} product={this.state.selectedProduct} editMode={true} {...props} isAuth={this.state.isAuth}/>}/>\r\n          <Route path='/Cart' render={(props)=><Cart remove={this.removeFromCartHandler} quantityHandler={this.quantityHandler} cart={this.state.cart} {...props}/>}/>\r\n          <Route path='/Checkout'  render={(props)=><Checkout  {...props} cart={this.state.cart} clicked={this.addOrderHandler}/>}/>\r\n          \r\n     </Switch>\r\n      </Auxiliary>\r\n  )\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default withRouter( Body);"]},"metadata":{},"sourceType":"module"}