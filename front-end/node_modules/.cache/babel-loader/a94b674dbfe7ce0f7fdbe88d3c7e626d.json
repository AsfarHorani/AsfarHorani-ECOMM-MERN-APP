{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projects\\\\e-commerce\\\\front-end\\\\src\\\\container\\\\Body\\\\body.js\";\nimport Header from '../../components/Header/Header';\nimport React, { Component } from 'react';\nimport Shop from '../../components/shop/shop';\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport SideBar from '../../components/SideBar/sideBar';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport AddProductForm from '../../components/Add-Product From/addProductForm';\nimport Signup from '../../components/Auth/signup/signup';\nimport Login from '../../components/Auth/login/login';\nimport ProductView from '../../components/Article/Product-View/product-view';\nimport Cart from '../../components/cart/cart';\nimport Checkout from '../../components/checkout/checkout';\nimport Orders from '../..//components/orders/orders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Body extends Component {\n  constructor() {}\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch('http://localhost:8080/get-products').then(res => {\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n      this.setState({\n        loading: false,\n        products: resData.products\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Auxiliary, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        logout: this.props.logout,\n        isAuth: this.props.isAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Shop, {\n            token: this.props.token,\n            ...props,\n            loading: this.state.loading,\n            addToCart: this.addToCartHandler,\n            editHandler: this.editHandler,\n            delete: this.deleteHandler,\n            isAuth: this.props.isAuth,\n            products: this.state.products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-product\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(AddProductForm, {\n            token: this.props.token,\n            editMode: false,\n            ...props,\n            isAuth: this.props.isAuth,\n            clicked: this.addProductHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/product/:prodId\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ProductView, {\n            token: this.props.token,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit-product\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(AddProductForm, {\n            token: this.props.token,\n            clickedEdit: this.clickedEditHandler,\n            product: this.state.selectedProduct,\n            editMode: true,\n            ...props,\n            isAuth: props.isAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Cart\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Cart, {\n            remove: this.removeFromCartHandler,\n            quantityHandler: this.quantityHandler,\n            cart: this.state.cart,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Checkout\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Checkout, { ...props,\n            cart: this.state.cart,\n            clicked: this.addOrderHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n            login: this.props.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Signup, { ...props,\n            token: this.props.token,\n            ...props,\n            signup: this.props.signup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/orders\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Orders, { ...props,\n            token: this.props.token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Body);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Work/Projects/e-commerce/front-end/src/container/Body/body.js"],"names":["Header","React","Component","Shop","Auxiliary","SideBar","Route","Switch","Redirect","withRouter","AddProductForm","Signup","Login","ProductView","Cart","Checkout","Orders","Body","constructor","componentDidMount","setState","loading","fetch","then","res","json","resData","console","log","products","catch","err","render","props","logout","isAuth","token","state","addToCartHandler","editHandler","deleteHandler","addProductHandler","clickedEditHandler","selectedProduct","removeFromCartHandler","quantityHandler","cart","addOrderHandler","login","signup"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,WAAP,MAAwB,oDAAxB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;;AAEA,MAAMC,IAAN,SAAmBf,SAAnB,CAA6B;AAE3BgB,EAAAA,WAAW,GAAE,CAEZ;;AAeHC,EAAAA,iBAAiB,GAAE;AAEnB,SAAKC,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAd;AACAC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAE;AAEP,aAAOA,GAAG,CAACC,IAAJ,EAAP;AAEH,KALH,EAKKF,IALL,CAKUG,OAAO,IAAE;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKN,QAAL,CAAc;AACXC,QAAAA,OAAO,EAAE,KADE;AAEVQ,QAAAA,QAAQ,EAAEH,OAAO,CAACG;AAFR,OAAd;AAIH,KAXH,EAYGC,KAZH,CAYSC,GAAG,IAAE;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KAdH;AAeC;;AAkOCC,EAAAA,MAAM,GACN;AAEE,wBACE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAA3B;AAAmC,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,MAAM,EAAGF,KAAD,iBAAW,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG,KAAxB;AAAA,eAAmCH,KAAnC;AAA0C,YAAA,OAAO,EAAE,KAAKI,KAAL,CAAWhB,OAA9D;AAAuE,YAAA,SAAS,EAAE,KAAKiB,gBAAvF;AAAyG,YAAA,WAAW,EAAE,KAAKC,WAA3H;AAAwI,YAAA,MAAM,EAAE,KAAKC,aAArJ;AAAoK,YAAA,MAAM,EAAE,KAAKP,KAAL,CAAWE,MAAvL;AAA+L,YAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWR;AAApN;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA4B,UAAA,KAAK,MAAjC;AAAkC,UAAA,MAAM,EAAGI,KAAD,iBAAU,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG,KAAlC;AAAyC,YAAA,QAAQ,EAAE,KAAnD;AAAA,eAA8DH,KAA9D;AAAsE,YAAA,MAAM,EAAE,KAAKA,KAAL,CAAWE,MAAzF;AAAiG,YAAA,OAAO,EAAE,KAAKM;AAA/G;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,kBAAZ;AAA+B,UAAA,KAAK,MAApC;AAAqC,UAAA,MAAM,EAAGR,KAAD,iBAAS,QAAC,WAAD;AAAa,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG,KAA/B;AAAA,eAA0CH;AAA1C;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA6B,UAAA,KAAK,MAAlC;AAAmC,UAAA,MAAM,EAAGA,KAAD,iBAAS,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG,KAAlC;AAAyC,YAAA,WAAW,EAAG,KAAKM,kBAA5D;AAAgF,YAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,eAApG;AAAqH,YAAA,QAAQ,EAAE,IAA/H;AAAA,eAAyIV,KAAzI;AAAgJ,YAAA,MAAM,EAAEA,KAAK,CAACE;AAA9J;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,KAAK,MAAzB;AAA0B,UAAA,MAAM,EAAGF,KAAD,iBAAS,QAAC,IAAD;AAAM,YAAA,MAAM,EAAE,KAAKW,qBAAnB;AAA0C,YAAA,eAAe,EAAE,KAAKC,eAAhE;AAAiF,YAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,IAAlG;AAAA,eAA4Gb;AAA5G;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,MAAM,EAAGA,KAAD,iBAAS,QAAC,QAAD,OAAeA,KAAf;AAAsB,YAAA,IAAI,EAAE,KAAKI,KAAL,CAAWS,IAAvC;AAA6C,YAAA,OAAO,EAAE,KAAKC;AAA3D;AAAA;AAAA;AAAA;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,MAAM,EAAGd,KAAD,iBAAU,QAAC,KAAD,OAAWA,KAAX;AAAmB,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWe;AAArC;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,MAAM,EAAGf,KAAD,iBAAU,QAAC,MAAD,OAAYA,KAAZ;AAAmB,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG,KAArC;AAAA,eAAgDH,KAAhD;AAAwD,YAAA,MAAM,EAAE,KAAKA,KAAL,CAAWgB;AAA3E;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,gBARF,eAUC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAuB,UAAA,KAAK,MAA5B;AAA6B,UAAA,MAAM,EAAGhB,KAAD,iBAAS,QAAC,MAAD,OAAYA,KAAZ;AAAmB,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG;AAArC;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAVD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA7R0B;;AAkS7B,oBAAe3B,UAAU,CAAEQ,IAAF,CAAzB","sourcesContent":["import Header from '../../components/Header/Header';\r\nimport React, {Component} from 'react';\r\nimport Shop from '../../components/shop/shop';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport SideBar from '../../components/SideBar/sideBar';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport AddProductForm from '../../components/Add-Product From/addProductForm'\r\nimport Signup from '../../components/Auth/signup/signup'\r\nimport Login from '../../components/Auth/login/login'\r\nimport ProductView from '../../components/Article/Product-View/product-view';\r\nimport Cart from '../../components/cart/cart';\r\nimport Checkout from '../../components/checkout/checkout';\r\nimport Orders from '../..//components/orders/orders'\r\n\r\nclass Body extends Component {\r\n\r\n  constructor(){\r\n    \r\n  }\r\n\r\n  state={  \r\n    selectedProduct: null,\r\n    loggedInAdmin : null,\r\n    \r\n    products: null,\r\n    cart: {\r\n      items:[],\r\n     totalPrice: null\r\n    },\r\n    loading: false\r\n    \r\n\r\n}\r\ncomponentDidMount(){\r\n  \r\nthis.setState({loading: true})\r\nfetch('http://localhost:8080/get-products')\r\n  .then(res=>{\r\n      \r\n      return res.json();\r\n   \r\n  }).then(resData=>{\r\n      console.log(resData)\r\n      this.setState({\r\n         loading: false,\r\n          products: resData.products,\r\n      })\r\n  })\r\n  .catch(err=>{\r\n      console.log(err)\r\n  })\r\n}\r\n\r\n\r\n\r\naddProductHandler=(prodData)=>{\r\n\r\nconst formData = new FormData();\r\nformData.append('title',prodData.title)\r\nformData.append('price',prodData.price)\r\nformData.append('description',prodData.description)\r\nformData.append('image', prodData.image)\r\n\r\nconsole.log(formData)\r\nfetch('http://localhost:8080/add-product/',{\r\n       method: 'POST',\r\n       headers: {\r\n          Authorization: 'Bearer ' + this.props.token\r\n          },\r\n       body: formData\r\n  }).then(res=>{\r\n    if(res.status!==200 && res.status!==201)\r\n    {\r\n      throw new Error('create product failed')\r\n    \r\n    }\r\n    return res.json();\r\n  }).then(resData=>{\r\n    console.log(resData);\r\n    const product={\r\n      title: resData.product.title,\r\n      price: resData.product.price,\r\n      description: resData.product.description,\r\n      imageUrl: resData.product.imageUrl,\r\n    }\r\n     this.setState(prevState=>{\r\n      let updatedProducts= [...prevState.products];\r\n      updatedProducts = prevState.products.concat(product);\r\n      return {products: updatedProducts}\r\n\r\n    }\r\n\r\n    \r\n    )\r\n    \r\n  })\r\n  .catch(err=>{\r\n    console.log(err)\r\n  })\r\n  \r\n\r\n}\r\n\r\ndeleteHandler=(prodId)=>{\r\n  \r\n  console.log(prodId)\r\n  fetch('http://localhost:8080/delete-product/' + prodId,\r\n  {\r\n    method: \"DELETE\",\r\n    headers:{Authorization: 'Bearer ' + this.props.token}\r\n  }\r\n  ).then(res=>{\r\n    if(res.status!==200 && res.status!==201){\r\n      throw new Error ('Delete product failed')\r\n    }\r\n    return res.json()\r\n\r\n  }).then(resData=>{\r\n    console.log(resData)\r\n    const deletedProduct = resData.product;\r\n    const updatedProducts= this.state.products.filter(prod=>prod._id!==deletedProduct._id);\r\n    this.setState({products: updatedProducts})\r\n\r\n  }).catch(err=>{\r\n       console.log(err)\r\n  })\r\n}\r\n\r\neditHandler=(prodId)=>{\r\n  console.log(prodId)\r\n const prod = this.state.products.find(p=>p._id===prodId)\r\n  console.log(prod)\r\n  this.setState({\r\n    selectedProduct: prod\r\n  })\r\n console.log(this.state.selectedProduct)\r\n}\r\n\r\naddToCartHandler=(prodId)=>{\r\n  \r\n  let updatedCart = {...this.state.cart}\r\n  let updatedCartItems= [...updatedCart.items]\r\n  let alreadyExist = false;\r\n\r\n\r\n  updatedCartItems.forEach(i=> {\r\n   if(prodId===i.product._id)\r\n   {\r\n     alreadyExist=true\r\n     return \r\n   }\r\n   \r\n  })\r\n  if(!alreadyExist){\r\n    const product = {...this.state.products.find(p=>prodId===p._id)}\r\n    const prodPrice = product.price;\r\n    \r\n    const newItem = [{\r\n      product: product,\r\n      quantity: 1\r\n    }\r\n     ]\r\n this.setState(prevState=>{\r\n       let updatedCart = {...prevState.cart}\r\n     let updatedCartItems= [...updatedCart.items];\r\n    let updatedPrice = [updatedCart.totalPrice]\r\n    updatedPrice = +updatedPrice +  +prodPrice;\r\n     updatedCartItems =prevState.cart.items.concat(newItem)\r\n     console.log(updatedPrice)\r\n      return{ cart: {...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}}\r\n     // this.setState({ someProperty: { ...this.state.someProperty, flag: false} });\r\n    })\r\n  }\r\n  \r\n    }\r\n\r\nremoveFromCartHandler=(prodId, prodPrice)=>{\r\n \r\n  this.setState(prevState=>{\r\n\r\n    let updatedCart = {...prevState.cart}\r\n    let updatedCartItems= [...updatedCart.items];\r\n    let updatedPrice = [updatedCart.totalPrice]\r\n    updatedPrice = +updatedPrice -  +prodPrice;\r\n   updatedCartItems= updatedCart.items.filter(p=>prodId!==p.product._id)\r\n    console.log( updatedCartItems)\r\n    return{\r\n      cart:{...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}\r\n      \r\n    }\r\n \r\n  })\r\n  }\r\n\r\n  addOrderHandler=(data)=>{\r\n    console.log(data,this.state.cart)\r\n    fetch('http://localhost:8080/add-order/',{\r\n      method: 'POST',\r\n      headers: {\r\n       'Content-Type': 'application/json',\r\n         },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        phone: data.phone,\r\n        email: data.email,\r\n        address: data.address,\r\n        order: this.state.cart\r\n      })\r\n     }).then(res=>{\r\n      if( res.status!==200 && res.status!==201){\r\n        throw new Error('Coul\\'d not place your order')\r\n      }\r\n\r\n      return res.json()\r\n\r\n     }).then(resData=>{\r\n       console.log(resData)\r\n       this.setState(prevState=>{\r\n        let updatedCart = {...prevState.cart}\r\n        let updatedCartItems= [...updatedCart.items];\r\n       let updatedPrice = [updatedCart.totalPrice]\r\n       updatedCartItems = [];\r\n       updatedPrice = null;\r\n       return{ cart: {...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}}\r\n       })\r\n     }).catch(err=>{\r\n       console.log(err)\r\n     })\r\n}\r\n\r\n  quantityHandler=(quan, prodId)=>{\r\n     \r\n      this.setState(prevState=>{\r\n      let updatedCart = {...prevState.cart}\r\n      let updatedCartItems= [...updatedCart.items];\r\n      let updatedPrice = updatedCart.totalPrice\r\n      let updatedCartItemIndex =  updatedCart.items.findIndex(p=>prodId===p.product._id)\r\n      let prevQuan = updatedCartItems[updatedCartItemIndex].quantity;\r\n        let prodPrice= updatedCartItems[updatedCartItemIndex].product.price;\r\n      updatedCartItems[updatedCartItemIndex].quantity = quan;\r\n       console.log(updatedPrice)\r\n      if(prevQuan && prevQuan>0){\r\n          updatedPrice = +updatedPrice - (prevQuan*prodPrice)\r\n      }\r\n      console.log(updatedPrice)\r\n      updatedPrice = +updatedPrice + (+quan* +prodPrice);\r\n      \r\n     return{ cart:{...this.state.cart, items: updatedCartItems, totalPrice : updatedPrice}}\r\n    })\r\n  }\r\n\r\n  clickedEditHandler=(prodData)=>{\r\n    console.log(prodData)\r\nconst formData = new FormData();\r\nformData.append('title',prodData.title)\r\nformData.append('price',prodData.price)\r\nformData.append('description',prodData.description)\r\nformData.append('image', prodData.image)\r\n  \r\n fetch('http://localhost:8080/edit-product/' + this.state.selectedProduct._id,{\r\n      method: 'PUT',\r\n      headers:{\r\n        Authorization: 'Bearer ' + this.props.token,\r\n      \r\n      },\r\n      body: formData\r\n    }).then(res=>{\r\n      if(res.status!==200 && res.status!==201){\r\n        throw new Error('Could not edit product')\r\n      }\r\n      return res.json()\r\n    }).then(resData=>{\r\n      console.log(resData)\r\n      this.setState({selectedProduct: null})\r\n    })\r\n  }\r\n\r\n  render() \r\n  {\r\n    \r\n    return(\r\n      <Auxiliary>\r\n        <Header logout={this.props.logout} isAuth={this.props.isAuth}/>\r\n        <SideBar />\r\n        <Switch>\r\n          <Route path='/' exact render={(props) => <Shop token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path=\"/add-product\"  exact render={(props) =><AddProductForm token={this.props.token} editMode={false} {...props}  isAuth={this.props.isAuth} clicked={this.addProductHandler} />}/>\r\n          <Route path=\"/product/:prodId\" exact render={(props)=><ProductView token={this.props.token} {...props} />   }></Route>\r\n          <Route path='/edit-product'  exact render={(props)=><AddProductForm token={this.props.token} clickedEdit ={this.clickedEditHandler} product={this.state.selectedProduct} editMode={true} {...props} isAuth={props.isAuth}/>}/>\r\n          <Route path='/Cart' exact render={(props)=><Cart remove={this.removeFromCartHandler} quantityHandler={this.quantityHandler} cart={this.state.cart} {...props}/>}/>\r\n          <Route path='/Checkout' exact render={(props)=><Checkout  {...props} cart={this.state.cart} clicked={this.addOrderHandler}/>}/>\r\n          <Route path=\"/login\" exact render={(props) =><Login {...props}  login={this.props.login}/>}/>\r\n          <Route path=\"/signup\" exact render={(props) =><Signup {...props} token={this.props.token} {...props}  signup={this.props.signup}/>}/>\r\n   \r\n         <Route path='/orders'  exact render={(props)=><Orders {...props} token={this.props.token}/>}/>\r\n       \r\n     </Switch>\r\n      </Auxiliary>\r\n  )\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default withRouter( Body);"]},"metadata":{},"sourceType":"module"}