[{"D:\\Work\\Projects\\e-commerce\\front-end\\src\\index.js":"1","D:\\Work\\Projects\\e-commerce\\front-end\\src\\reportWebVitals.js":"2","D:\\Work\\Projects\\e-commerce\\front-end\\src\\App.js":"3","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Header\\Header.js":"4","D:\\Work\\Projects\\e-commerce\\front-end\\src\\hoc\\Auxiliary\\Auxiliary.js":"5","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Article\\article.js":"6","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Header\\Logo\\logo.js":"7","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\SideBar\\sideBar.js":"8","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\NavigationItems\\navigationItems.js":"9","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\NavigationItems\\navigationItem\\navigationItem.js":"10","D:\\Work\\Projects\\e-commerce\\front-end\\src\\store\\reducer\\reducer.js":"11","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Form\\input.js":"12","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Add-Product From\\addProductForm.js":"13","D:\\Work\\Projects\\e-commerce\\front-end\\src\\container\\Body\\body.js":"14","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Auth\\signup\\signup.js":"15","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Auth\\login\\login.js":"16","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Auth\\auth.js":"17","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Article\\Product-View\\product-view.js":"18","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\cart\\cart.js":"19","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\checkout\\checkout.js":"20","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\orders\\orders.js":"21","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\shop\\home\\home.js":"22","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Header\\drawerToggle\\drawerToggle.js":"23","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\SideBar\\sideDrawer\\sideDrawer.js":"24","D:\\Work\\Projects\\e-commerce\\front-end\\src\\container\\Body\\layout\\layout.js":"25"},{"size":793,"mtime":1628247451371,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":3054,"mtime":1629323960666,"results":"29","hashOfConfig":"27"},{"size":1138,"mtime":1629325060889,"results":"30","hashOfConfig":"27"},{"size":62,"mtime":1628072973991,"results":"31","hashOfConfig":"27"},{"size":1512,"mtime":1629320370642,"results":"32","hashOfConfig":"27"},{"size":269,"mtime":1629063250088,"results":"33","hashOfConfig":"27"},{"size":293,"mtime":1629318806976,"results":"34","hashOfConfig":"27"},{"size":609,"mtime":1629304643912,"results":"35","hashOfConfig":"27"},{"size":582,"mtime":1628965989321,"results":"36","hashOfConfig":"27"},{"size":0,"mtime":1628160906344,"results":"37","hashOfConfig":"27"},{"size":1166,"mtime":1629282607858,"results":"38","hashOfConfig":"27"},{"size":5021,"mtime":1629372664243,"results":"39","hashOfConfig":"27"},{"size":10103,"mtime":1629455525328,"results":"40","hashOfConfig":"27"},{"size":1671,"mtime":1629041310395,"results":"41","hashOfConfig":"27"},{"size":1144,"mtime":1629372126282,"results":"42","hashOfConfig":"27"},{"size":160,"mtime":1628459018429,"results":"43","hashOfConfig":"27"},{"size":1590,"mtime":1629320786122,"results":"44","hashOfConfig":"27"},{"size":6061,"mtime":1629455375887,"results":"45","hashOfConfig":"27"},{"size":3608,"mtime":1629455648958,"results":"46","hashOfConfig":"27"},{"size":3506,"mtime":1629456825491,"results":"47","hashOfConfig":"27"},{"size":1856,"mtime":1629304599856,"results":"48","hashOfConfig":"27"},{"size":365,"mtime":1629321263408,"results":"49","hashOfConfig":"27"},{"size":865,"mtime":1629455797508,"results":"50","hashOfConfig":"27"},{"size":887,"mtime":1629324205377,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"yes1z0",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"D:\\Work\\Projects\\e-commerce\\front-end\\src\\index.js",["112","113","114"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer/reducer';\n\n//const store = createStore(reducer)\n\nReactDOM.render(\n // <Provider store={store}>\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n </React.StrictMode>,\n  //</Provider>\n    \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["115","116"],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\reportWebVitals.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\App.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Header\\Header.js",["117"],"import React from 'react';\r\nimport classes from './header.module.css';\r\nimport Logo from './Logo/logo';\r\nimport NavigationItem from '../NavigationItems/navigationItem/navigationItem'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport DrawerToggle from './drawerToggle/drawerToggle'\r\nconst header = (props)=>{\r\n\r\n\r\n  console.log(props)\r\n  let orderNav = (\r\n    <Auxiliary>\r\n    <NavigationItem exact link='/' >Home</NavigationItem>\r\n    <NavigationItem link='/Cart' >Cart</NavigationItem>\r\n    </Auxiliary>);\r\n\r\n    \r\nconst logout=()=>{\r\n  console.log('adasdsad')\r\n}\r\n  if(props.isAuth){\r\n    orderNav = (<Auxiliary>\r\n      \r\n     <NavigationItem exact link='/' >Home</NavigationItem>\r\n      <NavigationItem link='/Orders' >Orders</NavigationItem>\r\n    <NavigationItem link='/add-product' >Add new product</NavigationItem>\r\n    <button onClick={()=>props.logout()}>Logout</button>\r\n    </Auxiliary> )\r\n  }\r\n  return(<header className={classes.Toolbar}>\r\n      <DrawerToggle clicked={props.clicked}/>\r\n   <Logo />\r\n \r\n  <h2>Mr Foood</h2> \r\n \r\n           {orderNav}\r\n     \r\n    \r\n    \r\n  </header>)\r\n}\r\n\r\n\r\nexport default header;","D:\\Work\\Projects\\e-commerce\\front-end\\src\\hoc\\Auxiliary\\Auxiliary.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Article\\article.js",["118"],"import React from 'react';\r\nimport classes from './article.module.css';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport {Link} from 'react-router-dom';\r\nconst article=(props)=>{\r\n\r\n    let buttons = null;\r\n    \r\n    if(props.isAuth){\r\n        buttons =  (<div className={classes.Actions}>\r\n            <Link to= '/edit-product' onClick={()=>props.editHandler(props.id)} className={classes.Btn}>Edit</Link>\r\n            <Link to= {'/product/' + props.id} className={classes.Btn}>Details</Link>\r\n            <button  onClick={()=>props.delete(props.prodId)} className={classes.Btn}>Delete</button>\r\n            </div>)\r\n    }else{\r\n        buttons=(<div className={classes.Actions}>\r\n            <button onClick={()=>props.addToCart(props.prodId)} className={classes.Btn}>Add to Cart</button>\r\n            <Link to= {'/product/' + props.id} className={classes.Btn}>Details</Link>\r\n               </div> )\r\n    }\r\n    \r\n    return( \r\n    \r\n    <div className={classes.Item}>\r\n\r\n    <header className={classes.CardHeader}>\r\n        <h1 className={classes.Title }>{ props.title }</h1>\r\n    </header>\r\n\r\n    <div >\r\n        <img className={classes.Image} src={`http://localhost:8080/${props.imageUrl}`} alt={props.title}/>\r\n        \r\n    </div>\r\n\r\n    <div className={classes.Content}>\r\n        <h2 className={classes.Price}>{`Rs ${props.price}`}</h2>\r\n       \r\n    </div>\r\n    \r\n    <div className={classes.Actions}>\r\n \r\n                    {buttons}\r\n    </div>\r\n</div>)\r\n}\r\n\r\nexport default article;","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Header\\Logo\\logo.js",["119"],"import React from 'react';\r\nimport classes from './logo.module.css';\r\nimport img from '../../../assets/images/logo.jpg'\r\n\r\nconst logo = (props)=>(\r\n\r\n    <div className={classes.Logo}>\r\n        <img src={img} atle=\"logo\"/>\r\n    \r\n    </div>\r\n)\r\n\r\n\r\nexport default logo;","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\SideBar\\sideBar.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\NavigationItems\\navigationItems.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\NavigationItems\\navigationItem\\navigationItem.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\store\\reducer\\reducer.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Form\\input.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Add-Product From\\addProductForm.js",["120","121"],"import React , {Component, useEffect} from 'react';\r\nimport Input from '../Form/input';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport classes from './admin.module.css';\r\n\r\nconst addProductForm= (props)=>{\r\n\r\n\r\n    let product = null ;\r\n \r\n    let price, title, description,elements,image, category\r\nif(props.editMode){\r\n    product = props.product\r\n    price = product.price; title=product.title; description= product.description; \r\n}\r\n \r\n\r\n    const inputChangedHandler = (event,identifier)=>{\r\n        if(identifier==='title')\r\n        {\r\n        title= event.target.value;\r\n        \r\n        }\r\n        if(identifier==='price')\r\n        {\r\n            price = event.target.value\r\n           \r\n        }\r\n        if(identifier==='image')\r\n        {\r\n            console.log(event.target.files)\r\n            image=event.target.files[0]\r\n          \r\n        }\r\n        if(identifier==='desc')\r\n        {\r\n             description = event.target.value\r\n           \r\n        }\r\n        if(identifier==='category')\r\n        {\r\n            category = event.target.value\r\n           console.log(category)\r\n        }\r\n        \r\n     \r\n    }\r\nconst clickedHandler=(pri,ti,desc,im,cat)=>{\r\n   \r\n  const productData={\r\n      price: pri,\r\n      title: ti,\r\n      description: desc,\r\n      image: im,\r\n      category: cat\r\n  }\r\n  console.log(productData)\r\n       props.clicked(productData);\r\n       props.history.replace('/')\r\n}\r\nconst EditClickHandler=(pri,ti,desc,im)=>{\r\n      if(!im){\r\n          im ={ path: props.product.imageUrl} \r\n      }\r\n    const productData={\r\n        price: pri,\r\n        title: ti,\r\n        description: desc,\r\n        image: im\r\n    }\r\n         props.clickedEdit(productData);\r\n         props.history.replace('/')\r\n  }\r\n\r\n\r\n        \r\n    if(props.editMode){\r\n      elements = ( <div className={classes.Form}>\r\n        <Input \r\n        id = 'title'\r\n        onChange={(event)=>inputChangedHandler(event,'title')} \r\n        defaultValue={product.title}\r\n        elementType='text' \r\n        label='Title'/>\r\n\r\n<div className={classes.Input}>\r\n            <label \r\n         className={classes.Label}>\r\n         Category\r\n        </label>\r\n       <select  onChange={(event)=>inputChangedHandler(event,'category')}>\r\n                <option value=\"Empty\" selected=''>Select Category</option>\r\n                <option value=\"desi\">Desi</option>\r\n                <option value=\"drink\">Drink</option>\r\n                <option value=\"deserts\">Deserts</option>\r\n                <option value=\"barbecue\">Barbecue </option>\r\n             </select>\r\n        </div>\r\n       <Input \r\n        id= \"price\"\r\n        onChange={(event)=>inputChangedHandler(event,'price')} \r\n        elementType='text' \r\n        defaultValue={product.price}\r\n        label='Price'/>\r\n    \r\n    <Input \r\n        id=\"image\"\r\n        onChange={(event)=>inputChangedHandler(event,'image')} \r\n        elementType='file' \r\n        accept='png, .jpg,.jpeg'\r\n        label='Image'/>\r\n    \r\n<Input\r\nid=\"description\"\r\nonChange={(event)=>inputChangedHandler(event,'desc')} \r\ndefaultValue={product.description}\r\nelementType=\"textArea\"\r\nlabel=\"Desciption\"\r\n/>\r\n<div >\r\n<button  className={classes.Btn} onClick={()=>EditClickHandler(price,title,description,image,category)}>Okay</button>\r\n<button  className={classes.Btn}>Cancel</button>\r\n\r\n</div>\r\n\r\n        </div>\r\n        \r\n      )\r\n    } \r\n    else{\r\n        elements =   (  <Auxiliary>\r\n        <div className={classes.Form}>\r\n        <Input \r\n        id = 'title'\r\n        onChange={(event)=>inputChangedHandler(event,'title')} \r\n        elementType='text' \r\n        label='Title'/>\r\n\r\n        <div className={classes.Input}>\r\n            <label \r\n         className={classes.Label}>\r\n         Category\r\n        </label>\r\n       <select onChange={(event)=>inputChangedHandler(event,'category')}>\r\n               <option value=\"Empty\" selected=''>Select Category</option>\r\n                <option value=\"desi\">Desi</option>\r\n                <option value=\"drinks\">Drink</option>\r\n                <option value=\"deserts\">Desert</option>\r\n                <option value=\"barbecue\">Barbecue </option>\r\n                <option value=\"fastfood\">Fast food</option>\r\n             </select>\r\n        </div>\r\n\r\n<Input \r\n        id= \"price\"\r\n        onChange={(event)=>inputChangedHandler(event,'price')} \r\n        elementType='text' \r\n        label='Price'/>\r\n    \r\n    <Input \r\n        id=\"image\"\r\n        onChange={(event)=>inputChangedHandler(event,'image')} \r\n        elementType='file' \r\n        accept='png, .jpg,.jpeg'\r\n        label='Image'/>\r\n    \r\n<Input\r\nid=\"description\"\r\nonChange={(event)=>inputChangedHandler(event,'desc')} \r\nelementType=\"textArea\"\r\nlabel=\"Desciption\"\r\n/>\r\n\r\n        </div>\r\n\r\n<div >\r\n<button  className={classes.Btn} onClick={()=>clickedHandler(price,title,description,image,category)}>Add</button>\r\n<button  className={classes.Btn}>Cancel</button>\r\n\r\n</div>\r\n</Auxiliary>)\r\n    }\r\n\r\n    return (elements )\r\n    \r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default addProductForm;","D:\\Work\\Projects\\e-commerce\\front-end\\src\\container\\Body\\body.js",["122","123","124","125"],"import Header from '../../components/Header/Header';\r\nimport React, {Component} from 'react';\r\nimport Shop from '../../components/shop/home/home';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport SideBar from '../../components/SideBar/sideBar';\r\nimport SideDrawer from '../../components/SideBar/sideDrawer/sideDrawer';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport AddProductForm from '../../components/Add-Product From/addProductForm'\r\nimport Signup from '../../components/Auth/signup/signup'\r\nimport Login from '../../components/Auth/login/login'\r\nimport ProductView from '../../components/Article/Product-View/product-view';\r\nimport Cart from '../../components/cart/cart';\r\nimport Checkout from '../../components/checkout/checkout';\r\nimport Orders from '../..//components/orders/orders'\r\n\r\nclass Body extends Component {\r\n\r\n  state={  \r\n    selectedProduct: null,\r\n    loggedInAdmin : null,\r\n    \r\n    products: [],\r\n    cart: {\r\n      items:[],\r\n     totalPrice: null\r\n    },\r\n    loading: false,\r\n    \r\n\r\n}\r\n\r\nshouldComponentUpdate(nextProps, nextState) {\r\n  return this.state.products.length!= nextState.products.length;\r\n \r\n}\r\n\r\ncomponentDidMount(){\r\n  \r\nthis.setState({loading: true})\r\nfetch('http://localhost:8080/get-products')\r\n  .then(res=>{\r\n      \r\n      return res.json();\r\n   \r\n  }).then(resData=>{\r\n      console.log(resData)\r\n      this.setState({\r\n         loading: false,\r\n          products: resData.products,\r\n      })\r\n  })\r\n  .catch(err=>{\r\n      console.log(err)\r\n  })\r\n}\r\n\r\n\r\n\r\naddProductHandler=(prodData)=>{\r\n\r\nconst formData = new FormData();\r\nformData.append('title',prodData.title)\r\nformData.append('price',prodData.price)\r\nformData.append('description',prodData.description)\r\nformData.append('image', prodData.image)\r\nformData.append('category', prodData.category)\r\n\r\nconsole.log(formData)\r\nfetch('http://localhost:8080/add-product/',{\r\n       method: 'POST',\r\n       headers: {\r\n          Authorization: 'Bearer ' + this.props.token\r\n          },\r\n       body: formData\r\n  }).then(res=>{\r\n    if(res.status!==200 && res.status!==201)\r\n    {\r\n      throw new Error('create product failed')\r\n    \r\n    }\r\n    return res.json();\r\n  }).then(resData=>{\r\n    console.log(resData);\r\n    const product={\r\n      title: resData.product.title,\r\n      price: resData.product.price,\r\n      description: resData.product.description,\r\n      category: resData.product.category,\r\n      imageUrl: resData.product.imageUrl,\r\n    }\r\n     this.setState(prevState=>{\r\n      let updatedProducts= [...prevState.products];\r\n      updatedProducts = prevState.products.concat(product);\r\n      return {products: updatedProducts}\r\n\r\n    }\r\n\r\n    \r\n    )\r\n    \r\n  })\r\n  .catch(err=>{\r\n    console.log(err)\r\n  })\r\n  \r\n\r\n}\r\n\r\ndeleteHandler=(prodId)=>{\r\n  \r\n  console.log(prodId)\r\n  fetch('http://localhost:8080/delete-product/' + prodId,\r\n  {\r\n    method: \"DELETE\",\r\n    headers:{Authorization: 'Bearer ' + this.props.token}\r\n  }\r\n  ).then(res=>{\r\n    if(res.status!==200 && res.status!==201){\r\n      throw new Error ('Delete product failed')\r\n    }\r\n    return res.json()\r\n\r\n  }).then(resData=>{\r\n    console.log(resData)\r\n    const deletedProduct = resData.product;\r\n    const updatedProducts= this.state.products.filter(prod=>prod._id!==deletedProduct._id);\r\n    this.setState({products: updatedProducts})\r\n\r\n  }).catch(err=>{\r\n       console.log(err)\r\n  })\r\n}\r\n\r\neditHandler=(prodId)=>{\r\n  console.log(prodId)\r\n const prod = this.state.products.find(p=>p._id===prodId)\r\n  console.log(prod)\r\n  this.setState({\r\n    selectedProduct: prod\r\n  })\r\n console.log(this.state.selectedProduct)\r\n}\r\n\r\naddToCartHandler=(prodId)=>{\r\n  \r\n  let updatedCart = {...this.state.cart}\r\n  let updatedCartItems= [...updatedCart.items]\r\n  let alreadyExist = false;\r\n\r\n\r\n  updatedCartItems.forEach(i=> {\r\n   if(prodId===i.product._id)\r\n   {\r\n     alreadyExist=true\r\n     return \r\n   }\r\n   \r\n  })\r\n  if(!alreadyExist){\r\n    const product = {...this.state.products.find(p=>prodId===p._id)}\r\n    const prodPrice = product.price;\r\n    \r\n    const newItem = [{\r\n      product: product,\r\n      quantity: 1\r\n    }\r\n     ]\r\n this.setState(prevState=>{\r\n       let updatedCart = {...prevState.cart}\r\n     let updatedCartItems= [...updatedCart.items];\r\n    let updatedPrice = [updatedCart.totalPrice]\r\n    updatedPrice = +updatedPrice +  +prodPrice;\r\n     updatedCartItems =prevState.cart.items.concat(newItem)\r\n     console.log(updatedPrice)\r\n      return{ cart: {...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}}\r\n     // this.setState({ someProperty: { ...this.state.someProperty, flag: false} });\r\n    })\r\n  }\r\n  \r\n    }\r\n\r\n     clickCheckoutHandler=(cart)=>{\r\n      this.setState({cart: cart})\r\n     }\r\n\r\n  addOrderHandler=(data)=>{\r\n    console.log(data,this.state.cart)\r\n    fetch('http://localhost:8080/add-order/',{\r\n      method: 'POST',\r\n      headers: {\r\n       'Content-Type': 'application/json',\r\n         },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        phone: data.phone,\r\n        email: data.email,\r\n        address: data.address,\r\n        order: this.state.cart\r\n      })\r\n     }).then(res=>{\r\n      if( res.status!==200 && res.status!==201){\r\n        throw new Error('Coul\\'d not place your order')\r\n      }\r\n\r\n      return res.json()\r\n\r\n     }).then(resData=>{\r\n       console.log(resData)\r\n       this.setState(prevState=>{\r\n        let updatedCart = {...prevState.cart}\r\n        let updatedCartItems= [...updatedCart.items];\r\n       let updatedPrice = [updatedCart.totalPrice]\r\n       updatedCartItems = [];\r\n       updatedPrice = null;\r\n       return{ cart: {...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}}\r\n       })\r\n     }).catch(err=>{\r\n       console.log(err)\r\n     })\r\n}\r\n\r\n\r\n\r\n  clickedEditHandler=(prodData)=>{\r\n    console.log(prodData)\r\nconst formData = new FormData();\r\nformData.append('title',prodData.title)\r\nformData.append('price',prodData.price)\r\nformData.append('description',prodData.description)\r\nformData.append('image', prodData.image)\r\nformData.append('category', prodData.category)\r\n  \r\n fetch('http://localhost:8080/edit-product/' + this.state.selectedProduct._id,{\r\n      method: 'PUT',\r\n      headers:{\r\n        Authorization: 'Bearer ' + this.props.token,\r\n      \r\n      },\r\n      body: formData\r\n    }).then(res=>{\r\n      if(res.status!==200 && res.status!==201){\r\n        throw new Error('Could not edit product')\r\n      }\r\n      return res.json()\r\n    }).then(resData=>{\r\n      console.log(resData)\r\n      this.setState({selectedProduct: null})\r\n    })\r\n  }\r\n\r\n \r\n\r\n  render() \r\n  {\r\n    \r\n    return(\r\n      <Auxiliary>\r\n       \r\n        <Switch>\r\n          <Route path='/' exact render={(props) => <Shop token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path='/deserts' exact render={(props) => <Shop param='deserts' token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path='/drinks' exact render={(props) => <Shop param='drinks' token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path='/desi' exact render={(props) => <Shop param='desi' token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path='/desi' exact render={(props) => <Shop param='desi' token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path='/fast-food' exact render={(props) => <Shop param='fastfood' token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path='/barbecue' exact render={(props) => <Shop param='barbecue' token={this.props.token} {...props} loading={this.state.loading} addToCart={this.addToCartHandler} editHandler={this.editHandler} delete={this.deleteHandler} isAuth={this.props.isAuth} products={this.state.products}/>}/>\r\n          <Route path=\"/add-product\"  exact render={(props) =><AddProductForm token={this.props.token} editMode={false} {...props}  isAuth={this.props.isAuth} clicked={this.addProductHandler} />}/>\r\n          <Route name='product-view' path=\"/product/:prodId\" exact render={(props)=><ProductView token={this.props.token} {...props} />   }></Route>\r\n          <Route path='/edit-product'  exact render={(props)=><AddProductForm token={this.props.token} clickedEdit ={this.clickedEditHandler} product={this.state.selectedProduct} editMode={true} {...props} isAuth={props.isAuth}/>}/>\r\n          <Route path='/Cart' exact render={(props)=><Cart clicked={this.clickCheckoutHandler} cart={this.state.cart} {...props}/>}/>\r\n          <Route path='/Checkout' exact render={(props)=><Checkout  {...props} cart={this.state.cart} clicked={this.addOrderHandler}/>}/>\r\n          <Route path=\"/login\" exact render={(props) =><Login {...props}  login={this.props.login}/>}/>\r\n          <Route path=\"/signup\" exact render={(props) =><Signup {...props} token={this.props.token} {...props}  signup={this.props.signup}/>}/>\r\n          <Route path='/orders'  exact render={(props)=><Orders {...props} token={this.props.token}/>}/>\r\n          <Redirect to='/'/>\r\n     </Switch>\r\n      </Auxiliary>\r\n  )\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default withRouter( Body);","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Auth\\signup\\signup.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Auth\\login\\login.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Auth\\auth.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Article\\Product-View\\product-view.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\cart\\cart.js",["126","127","128"],"\r\nimport React from 'react';\r\nimport './cart.scss'\r\nimport {Link} from 'react-router-dom';\r\nimport { Component } from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nclass Cart  extends Component  {\r\n\r\ncomponentWillMount(){\r\n\r\n  this.setState({cart: this.props.cart})\r\n  \r\n}\r\n\r\n  state={\r\n    cart:{}\r\n  }\r\n\r\n  quantityHandler=(quan, prodId)=>{\r\n     \r\n    this.setState(prevState=>{\r\n    let updatedCart = {...prevState.cart}\r\n    let updatedCartItems= [...updatedCart.items];\r\n    let updatedPrice = updatedCart.totalPrice\r\n    let updatedCartItemIndex =  updatedCart.items.findIndex(p=>prodId===p.product._id)\r\n    let prevQuan = updatedCartItems[updatedCartItemIndex].quantity;\r\n      let prodPrice= updatedCartItems[updatedCartItemIndex].product.price;\r\n    updatedCartItems[updatedCartItemIndex].quantity = quan;\r\n     console.log(updatedPrice)\r\n    if(prevQuan && prevQuan>0){\r\n        updatedPrice = +updatedPrice - (prevQuan*prodPrice)\r\n    }\r\n    console.log(updatedPrice)\r\n    updatedPrice = +updatedPrice + (+quan* +prodPrice);\r\n    \r\n   return{ cart:{...this.state.cart, items: updatedCartItems, totalPrice : updatedPrice}}\r\n  })\r\n}\r\n\r\nremoveFromCartHandler=(prodId, prodPrice)=>{\r\n \r\n  this.setState(prevState=>{\r\n\r\n    let updatedCart = {...prevState.cart}\r\n    let updatedCartItems= [...updatedCart.items];\r\n    let updatedPrice = [updatedCart.totalPrice]\r\n    updatedPrice = +updatedPrice -  +prodPrice;\r\n   updatedCartItems= updatedCart.items.filter(p=>prodId!==p.product._id)\r\n    console.log( updatedCartItems)\r\n    return{\r\n      cart:{...this.state.cart, items: updatedCartItems, totalPrice: updatedPrice}\r\n      \r\n    }\r\n \r\n  })\r\n  }\r\n\r\n\r\nrender()\r\n{\r\n  console.log(this.state.cart)\r\n  let subTotal = this.state.cart.totalPrice;\r\n\r\n\r\n\r\n\r\nconsole.log(this.state.cart)\r\n\r\n    let items =<h3>Cart is Empty</h3>;\r\n    if(this.state.cart.items.length>0)\r\n    {\r\n      items =  this.state.cart.items.map(i=>\r\n        {\r\n          let  totalPrice= i.product.price * i.quantity;\r\n\r\n          const changeHandler=(event)=>{\r\n          const quantity = event.target.value;\r\n          this.quantityHandler(quantity, i.product._id)\r\n          console.log(totalPrice)\r\n          }\r\n             \r\n        return(\r\n        <div key={i.product._id} className=\"product\">\r\n         <div className='product-image'>\r\n                <img src={`http://localhost:8080/${i.product.imageUrl}`}/>\r\n            </div>\r\n            <div className=\"product-details\">\r\n              <div className=\"product-title\">{i.product.title}</div>\r\n            \r\n            </div>\r\n            <div className=\"product-price\">{i.product.price}</div>\r\n            <div className=\"product-quantity\">\r\n              <input defaultValue={i.quantity} type=\"number\" onChange={(event)=>changeHandler(event)}  min=\"1\"/>\r\n            </div>\r\n            <div className=\"product-removal\">\r\n              <button onClick={()=>this.removeFromCartHandler(i.product._id, i.product.price)} className=\"remove-product\">\r\n                Remove\r\n              </button>\r\n              \r\n            </div>\r\n            <div className=\"product-line-price\">{totalPrice}</div>\r\n          </div>\r\n            )})\r\n    }\r\n\r\n\r\n  return(\r\n      \r\n    <div className=\"shopping-cart\">\r\n    <h1>Shopping Cart</h1> \r\n    <div className=\"column-labels\">\r\n    <label className=\"product-image\">Image</label>\r\n    <label className=\"product-details\">Product</label>\r\n    <label className=\"product-price\">Price</label>\r\n    <label className=\"product-quantity\">Quantity</label>\r\n    <label className=\"product-removal\">Remove</label>\r\n    <label className=\"product-line-price\">Total</label>\r\n  </div>\r\n\r\n    {items}\r\n\r\n <div className=\"totals\">\r\n<div className=\"totals-item\">\r\n  <label>Subtotal</label>\r\n  <div className=\"totals-value\" id=\"cart-subtotal\">{subTotal? subTotal : 0}\r\n  </div>\r\n</div>\r\n\r\n\r\n</div>\r\n  \r\n  <Link to='/Checkout' >\r\n     <button onClick={()=>this.props.clicked(this.state.cart)}  className=\"checkout\">\r\n     Checkout\r\n     </button>\r\n     </Link>\r\n\r\n  </div>\r\n)\r\n}\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default Cart;\r\n\r\n// <div className=\"shopping-cart\">\r\n\r\n//   <div className=\"column-labels\">\r\n//     <label className=\"product-image\">Image</label>\r\n//     <label className=\"product-details\">Product</label>\r\n//     <label className=\"product-price\">Price</label>\r\n//     <label className=\"product-quantity\">Quantity</label>\r\n//     <label className=\"product-removal\">Remove</label>\r\n//     <label className=\"product-line-price\">Total</label>\r\n//   </div>\r\n\r\n  {/* <div className=\"product\">\r\n    <div className=\"product-image\">\r\n      <img src=\"https://s.cdpn.io/3/dingo-dog-bones.jpg\">\r\n    </div>\r\n    <div className=\"product-details\">\r\n      <div className=\"product-title\">Dingo Dog Bones</div>\r\n      <p className=\"product-description\">The best dog bones of all time. Holy crap. Your dog will be begging for these things! I got curious once and ate one myself. I'm a fan.</p>\r\n    </div>\r\n    <div className=\"product-price\">12.99</div>\r\n    <div className=\"product-quantity\">\r\n      <input type=\"number\" value=\"2\" min=\"1\">\r\n    </div>\r\n    <div className=\"product-removal\">\r\n      <button className=\"remove-product\">\r\n        Remove\r\n      </button>\r\n    </div>\r\n    <div className=\"product-line-price\">25.98</div>\r\n  </div> */}\r\n\r\n\r\n//   <div className=\"totals\">\r\n//     <div className=\"totals-item\">\r\n//       <label>Subtotal</label>\r\n//       <div className=\"totals-value\" id=\"cart-subtotal\">71.97</div>\r\n//     </div>\r\n//     <div className=\"totals-item\">\r\n//       <label>Tax (5%)</label>\r\n//       <div className=\"totals-value\" id=\"cart-tax\">3.60</div>\r\n//     </div>\r\n//     <div className=\"totals-item\">\r\n//       <label>Shipping</label>\r\n//       <div className=\"totals-value\" id=\"cart-shipping\">15.00</div>\r\n//     </div>\r\n//     <div className=\"totals-item totals-item-total\">\r\n//       <label>Grand Total</label>\r\n//       <div className=\"totals-value\" id=\"cart-total\">90.57</div>\r\n//     </div>\r\n//   </div>\r\n      \r\n//       <button className=\"checkout\">Checkout</button>\r\n\r\n// </div>","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\checkout\\checkout.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\orders\\orders.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\shop\\home\\home.js",["129","130","131"],"import React, { Component } from 'react';\r\n\r\nimport Article  from '../../Article/article';\r\nimport classes from './shop.module.css';\r\nconst shop=(props)=>{\r\n    let prods = props.products ;\r\n    const param = props.param\r\n    console.log(props.param)\r\n    switch(param)\r\n    {\r\n        case('deserts'):\r\n         prods= props.products.filter(p=>p.category=== 'deserts')\r\n        console.log(prods)\r\n        break\r\n        case('desi'):\r\n         prods= props.products.filter(p=>p.category=== 'desi')\r\n    \r\n        break\r\n        \r\n        case('drinks'):\r\n        prods= props.products.filter(p=>p.category=== 'drinks')\r\n        break\r\n        case('fastfood'):\r\n        prods= props.products.filter(p=>p.category=== 'fastfood')\r\n        break\r\n        case('barbecue'):\r\n        prods= props.products.filter(p=>p.category=== 'barbecue')\r\n        break\r\n\r\n    default: prods = prods\r\n    \r\n     break\r\n    \r\n     \r\n    }\r\n\r\n\r\n\r\n    if(props.loading){\r\n             return (\r\n                <h1>loading...</h1>\r\n            )\r\n        }\r\n\r\n        if(!prods || prods.length===0){\r\n            return (\r\n                <h1>No Products !</h1>\r\n            )\r\n        }\r\n    \r\n        \r\n\r\n        prods = prods.map(art=>{\r\n            console.log(art._id)\r\n           return( <Article\r\n             addToCart={props.addToCart}\r\n             key={art._id}\r\n             editHandler={props.editHandler}\r\n             id={art._id}\r\n             prodId={art._id}\r\n             isAuth={props.isAuth}\r\n             title={art.title} \r\n             price={art.price}  \r\n             description={art.description}\r\n             imageUrl={ art.imageUrl}\r\n             delete={props.delete}\r\n             key={art._id}/>)\r\n        })\r\n        \r\n    \r\n        return (\r\n        <div className={classes.Grid}>{prods}  </div> \r\n    )\r\n\r\n    }\r\n\r\n\r\n\r\nexport default shop;","D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\Header\\drawerToggle\\drawerToggle.js",[],"D:\\Work\\Projects\\e-commerce\\front-end\\src\\components\\SideBar\\sideDrawer\\sideDrawer.js",["132"],"import React from 'react';\r\nimport NavigationItems from '../../NavigationItems/navigationItems';\r\nimport classes from './sideDrawer.module.css';\r\n//import Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport img from '../../../assets/images/back.png'\r\n\r\nconst SideDrawer = ( props ) => {\r\n \r\n\r\n    console.log(props)\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.show) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Auxiliary>\r\n    <div className={attachedClasses.join(' ')}>\r\n               <img onClick={props.close} src={img} />\r\n                <nav onClick={props.close}>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Auxiliary>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;","D:\\Work\\Projects\\e-commerce\\front-end\\src\\container\\Body\\layout\\layout.js",[],{"ruleId":"133","severity":1,"message":"134","line":7,"column":9,"nodeType":"135","messageId":"136","endLine":7,"endColumn":20},{"ruleId":"133","severity":1,"message":"137","line":8,"column":9,"nodeType":"135","messageId":"136","endLine":8,"endColumn":17},{"ruleId":"133","severity":1,"message":"138","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":15},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"133","severity":1,"message":"143","line":18,"column":7,"nodeType":"135","messageId":"136","endLine":18,"endColumn":13},{"ruleId":"133","severity":1,"message":"144","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":8,"column":9,"nodeType":"147","endLine":8,"endColumn":37},{"ruleId":"133","severity":1,"message":"148","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":26},{"ruleId":"133","severity":1,"message":"149","line":1,"column":28,"nodeType":"135","messageId":"136","endLine":1,"endColumn":37},{"ruleId":"133","severity":1,"message":"150","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":14},{"ruleId":"133","severity":1,"message":"151","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":15},{"ruleId":"133","severity":1,"message":"152","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":33,"column":36,"nodeType":"155","messageId":"156","endLine":33,"endColumn":38},{"ruleId":"133","severity":1,"message":"157","line":6,"column":10,"nodeType":"135","messageId":"136","endLine":6,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":86,"column":17,"nodeType":"147","endLine":86,"endColumn":75},{"ruleId":"158","severity":1,"message":"159","line":161,"column":3,"nodeType":"160","messageId":"161","endLine":179,"endColumn":13},{"ruleId":"133","severity":1,"message":"148","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":30,"column":22,"nodeType":"135","messageId":"164","endLine":30,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":67,"column":14,"nodeType":"167","endLine":67,"endColumn":27},{"ruleId":"145","severity":1,"message":"146","line":19,"column":16,"nodeType":"147","endLine":19,"endColumn":55},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'reducer' is defined but never used.","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'logout' is assigned a value but never used.","'Auxiliary' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'useEffect' is defined but never used.","'Header' is defined but never used.","'SideBar' is defined but never used.","'SideDrawer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'render' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-self-assign","'prods' is assigned to itself.","selfAssignment","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]